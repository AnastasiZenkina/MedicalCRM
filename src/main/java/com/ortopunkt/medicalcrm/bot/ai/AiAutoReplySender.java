package com.ortopunkt.medicalcrm.bot.ai;

import com.ortopunkt.medicalcrm.entity.Application;
import com.ortopunkt.medicalcrm.service.ApplicationService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.bots.AbsSender;

@Service
@Slf4j
public class AiAutoReplySender {

    @Autowired
    private final AiHttpClient aiHttpClient;
    private final ApplicationService applicationService;
    private final AbsSender sender;

    public AiAutoReplySender(
            AiHttpClient aiHttpClient,
            ApplicationService applicationService,
            @Qualifier("botSender") AbsSender sender
    ) {
        this.aiHttpClient = aiHttpClient;
        this.applicationService = applicationService;
        this.sender = sender;
    }

    public void send(Application app) {
        String text = app.getText();

        if (!TextSanitizer.isSafe(text)) {
            log.warn("–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω 'common'");
            SendMessage fallbackMessage = new SendMessage();
            fallbackMessage.setChatId(app.getPatient().getTgId());
            fallbackMessage.setText("–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –í—Ä–∞—á –ø–æ—Å–º–æ—Ç—Ä–∏—Ç –∏ –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –ª–∏—á–Ω–æ üåø");
            try {
                sender.execute(fallbackMessage);
            } catch (Exception e) {
                log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ fallback-—Å–æ–æ–±—â–µ–Ω–∏—è", e);
            }
            return;
        }

        String replyText = null;
        try {
            AiResponse response = aiHttpClient.getResponse(text, applicationService.hasPhotos(app));
            replyText = response != null ? response.getReply() : null;
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ AI", e);
        }

        if (replyText == null || replyText.isBlank()) {
            log.warn("AI –Ω–µ –¥–∞–ª –æ—Ç–≤–µ—Ç–∞ ‚Äî –ø–∞—Ü–∏–µ–Ω—Ç—É –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º");
            return;
        }

        SendMessage message = new SendMessage();
        message.setChatId(app.getPatient().getTgId());
        message.setText("ü§ñ *–í—Ä–∞—á –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–Ω—è—Ç. –í–∞–º –æ—Ç–≤–µ—á–∞–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç:*\n\n" + replyText);
        message.enableMarkdown(true);
        try {
            sender.execute(message);
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ AI-–æ—Ç–≤–µ—Ç–∞", e);
            return;
        }

        app.setAnsweredByAi(true);
        applicationService.saveApplication(app);
    }
}
