package com.example.medicalcrm.bot.handler;

import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.bots.AbsSender;

@Component
@RequiredArgsConstructor
public class DoctorCommandHandler {

    private final AbsSender sender;

    public void handle(Update update) {
        Long chatId = update.getMessage().getChatId();
        String text = update.getMessage().getText();
        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());

        if (text.equalsIgnoreCase("/–æ—Ç—á—ë—Ç") || text.equalsIgnoreCase("/–æ—Ç—á–µ—Ç")) {
            message.setText("üß† –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç:\n(–¢—É—Ç –±—É–¥–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Äî –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)");
        } else if (text.equalsIgnoreCase("/–ø–∞—Ü–∏–µ–Ω—Ç—ã")) {
            message.setText("üìã –°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n(—Ç—É—Ç –ø–æ–∑–∂–µ –ø–æ—è–≤—è—Ç—Å—è –∫–∞—Ä—Ç–æ—á–∫–∏)");
        } else {
            message.setText("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–æ–∫—Ç–æ—Ä! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–æ—Ç—á—ë—Ç –∏–ª–∏ /–ø–∞—Ü–∏–µ–Ω—Ç—ã.");
        }

        try {
            sender.execute(message);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
